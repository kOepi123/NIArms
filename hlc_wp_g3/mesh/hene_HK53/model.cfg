class CfgSkeletons
{
    class Default {
        isDiscrete = 1;
        skeletonInherit = "";
        skeletonBones[] = {};
    };
  class HK53Skeleton: Default
    {
        skeletonBones[]=
        {
			//"child", "parent",  ("" is inherit base)
			"Magazine", "",
			"Diopter", "",
			"bolt_oprod", "",
			"Bolt",	"bolt_oprod",
			"Toprail","",
			"Charging_handle", "bolt_oprod",
			"magazine_release", "",
			"Trigger",	"",
			"fire_Selector","",
			"Break","",
			"zasleh",""
        };
    };
};

class CfgModels
{
    class Default {
        selections[] = {};
        selectionsInherit = "";
        skeletonName = "";
    };


    class HK53M: Default
    {
        sections[]=
        {
            "zasleh","Magazine","Bolt","Trigger","Break","Diopter","Lower","Upper","Grip","Grip1","Panels","Rail"
        };
        skeletonName="HK53Skeleton";
        sectionsInherit = ""; // NO idera what this does but A3 bellyaches if it's not there...
	class Animations
{
	// Forces the muzzleflash to be hidden when a suppressor's attached
            class muzzleflash_hide
            {
                type="hide";
                source="hasSuppressor";
                selection="zasleh";
                minValue = 0.0;
                maxvalue = 0.25;
                hideValue = 0.01;
            };
	// Rotates drum when th zero changes
            class Zeroing100m
            {
                type = "rotation";
                source="zeroing1";
                selection="Diopter";
                axis = "drum_rot";
                minValue = 0;
                maxValue = 1;
                angle0=rad 0;
                angle1=rad -270;
            };

		class toprail_hide
            {
                type="hide";
                source="hasOptics";
                selection="Toprail";
                minValue = 0;
                maxvalue = 1;
                hideValue = 0;
	unhidevalue = 0.5;
            };
//RELOAD SEQUENCE
//Check with your own animation that you're using to make sure it syncs... and the value is between 0 and 1 where 1 is the ereload is complete.. so have a calculator open
	//Hides magazine during magazine change
            class magazine_hide
            {
                type="hide";
                source="reloadMagazine";
                selection="Magazine";
                minValue=0.0;
                maxValue=1;
                hideValue=0.21666666667;
                unhideValue=0.63333333333;
            };
//removes magazine from gun
            class magazine_move1
            {
                type = "translation";
                source="reloadMagazine";
                selection="Magazine";
                axis = "Magazine_axis";
                minValue = 0.194444444;
                maxValue = 0.21666666667; //0.09; //"1";
                offset0 = "0";
                offset1 = "1";
            };
//replaces "new" magazine into gun
            class magazine_move2
            {
                type = "translation";
                source="reloadMagazine";
                selection="Magazine";
                axis = "Magazine_axis";
                minValue = 0.64444444444;
                maxValue = 0.661111111111111; //0.09; //"1";
                offset0 = "0";
                offset1 = "-1";
            };
//rotates charging handle to extended position
          class bolthandle_rot1
            {
                type = "rotation";
                source="reloadMagazine";
                selection="Charging_handle";
                axis = "bhaxis";
                minValue = 0.03333333;
                maxValue = 0.05; //0.09; //"1";
                angle1=rad 90;
                angle0=rad 0;
            };
//Reverse the above
            class bolthandle_rot2
            {
                type = "rotation";
                source="reloadMagazine";
                selection="Charging_handle";
                axis = "bhaxis";
                minValue = 0.83333333333333;
                maxValue = 0.84444444444444; //0.09; //"1";
                angle1=rad -90;
                angle0=rad 0;
            };
//rotates charging handle into the locking notch
            class bolthandle_rot3
            {
                type = "rotation";
                source="reloadMagazine";
                selection="Charging_handle";
                axis = "bolt_axis";
                minValue = 0.0944444;
                maxValue = 0.1111111111; //0.09; //"1";
                angle1=rad 45;
                angle0=rad 0;
            };

//reverse above
            class bolthandle_rot4
            {
                type = "rotation";
                source="reloadMagazine";
                selection="Charging_handle";
                axis = "bolt_axis";
                minValue = 0.79444444;
                maxValue = 0.811111111;
                angle1=rad -45;
                angle0=rad 0;
            };
//moves charging handle back to rear
                      class bolthandle_move1
            {
                type = "translation";
                source = "reloadMagazine";
                selection = "bolt_oprod";
                axis = "bolt_axis";
                begin = "bolt_axis_end";
                end = "bolt_axis_begin";
                minValue = 0.0555555556;
                maxValue = 0.0722222222; //0.09; //"1";
                offset0 = "0";
                offset1 = "1";
            };
                        class bolthandle_move2
            {
                type = "translation";
                source = "reloadMagazine";
                selection = "bolt_oprod";
                axis = "bolt_axis";
                begin = "bolt_axis_end";
                end = "bolt_axis_begin";
                minValue = 0.83333333333333;
                maxValue = 0.84444444444444;
                offset0 = "0";
                offset1 = "-1";
            };
//rotates magazine paddle
            class magrelease_rot1
            {
                type = "rotation";
                source="reloadMagazine";
                selection="magazine_release";
                axis = "Magrelease_axis";
                minValue = 0.1888;
                maxValue = 0.2; //0.09; //"1";
                angle1=rad 10;
                angle0=rad 0;
            };
            class magrelease_rot2
            {
                type ="rotation";
                source="reloadMagazine";
                selection="magazine_release";
                axis = "Magrelease_axis";
                minValue = 0.2111111;
                maxValue = 0.22222222; //0.09; //"1";
                angle1=rad -10;
                angle0=rad 0;
            };

// END RELOAD

//Cycles the weapon while firing
                       class bolt
            {
                type = "translation";
                source = "reload";
                selection = "Bolt";
                axis = "bolt_axis";
                begin = "bolt_axis_end";
                end = "bolt_axis_begin";
                minValue = 0;
                maxValue = 0.5; //0.09; //"1";
                offset0 = "0";
                offset1 = "1";
            };
                        class bolt1
            {
                type = "translation";
                source = "reload";
                selection = "Bolt";
                axis = "bolt_axis";
                begin = "bolt_axis_end";
                end = "bolt_axis_begin";
                minValue = 0.5;
                maxValue = 1; //0.09; //"1";
                offset0 = "0";
                offset1 = "-1";
            };
//makes the magazine hidden if there's no magazine in the gun
		class unloaded_magazine_hide {
		type = "hide";
		source = "hasMagazine";
		selection = "Magazine";
		hideValue = 0.1;
			};
// Fire Selector, moves in 
    class FireModeSwitch {
                type="rotationZ";
                source="weaponMode";
                memory=1;
                selection="fire_Selector";
                animPeriod=0;
                axis="Selector_axis";
                minValue=0.0;
                maxValue=0.42;
                angle1=rad 45;
                angle0=rad -60;
            };
//Makes muzzle not look static
class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="barrelaxis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
};
};
// class <p3d filename>:<^ THAT class>{};
class hk53: HK53M {};
class hk53_rails: HK53M {};
};